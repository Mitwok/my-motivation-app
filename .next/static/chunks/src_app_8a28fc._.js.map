{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/mitwok/my-motivation-app/src/app/components/contexts/CalendarContext.tsx"],"sourcesContent":["\"use client\";\nimport React, { createContext, useContext, useState } from \"react\";\n\n// Тип данных для выбранного дня\ninterface SelectedDate {\n  year: number;\n  month: number;\n  day: number;\n}\n\n// Тип контекста\ninterface CalendarContextType {\n  selectedDate: SelectedDate | null;\n  setSelectedDate: (date: SelectedDate) => void;\n}\n\n// Создаем контекст\nconst CalendarContext = createContext<CalendarContextType | undefined>(\n  undefined\n);\n\n// Провайдер контекста\nexport const CalendarProvider: React.FC<{ children: React.ReactNode }> = ({\n  children,\n}) => {\n  const [selectedDate, setSelectedDate] = useState<SelectedDate | null>(null);\n\n  return (\n    <CalendarContext.Provider value={{ selectedDate, setSelectedDate }}>\n      {children}\n    </CalendarContext.Provider>\n  );\n};\n\n// Хук для использования контекста\nexport const useCalendar = () => {\n  const context = useContext(CalendarContext);\n  if (!context) {\n    throw new Error(\"useCalendar must be used within a CalendarProvider\");\n  }\n  return context;\n};\n"],"names":[],"mappings":";;;;;AACA;;;AADA;;AAgBA,mBAAmB;AACnB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAClC;AAIK,MAAM,mBAA4D,CAAC,EACxE,QAAQ,EACT;;IACC,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAuB;IAEtE,qBACE,6LAAC,gBAAgB,QAAQ;QAAC,OAAO;YAAE;YAAc;QAAgB;kBAC9D;;;;;;AAGP;GAVa;KAAA;AAaN,MAAM,cAAc;;IACzB,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;IANa"}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":["file:///Users/mitwok/my-motivation-app/src/app/components/Calendar.tsx"],"sourcesContent":["\"use client\";\nimport React, { useState, useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { useCalendar } from \"./contexts/CalendarContext\";\n\ninterface SelectedDate {\n  year: number;\n  month: number;\n  day: number;\n}\n\nexport default function Calendar() {\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [days, setDays] = useState<(number | null)[]>([]);\n  const { selectedDate, setSelectedDate } = useCalendar();\n\n  // Дни недели и месяцы на английском\n  const weekDays = [\"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\", \"Su\"];\n  const fullMonths = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  useEffect(() => {\n    const year = currentDate.getFullYear();\n    const month = currentDate.getMonth();\n\n    // Количество дней в текущем месяце\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\n\n    // Первый день месяца (перевод с учетом понедельника как первого дня недели)\n    const firstDayOfMonth = (new Date(year, month, 1).getDay() + 6) % 7;\n\n    // Создание массива дней с пустыми ячейками для выравнивания начала месяца\n    const daysArray = [\n      ...Array.from({ length: firstDayOfMonth }, () => null),\n      ...Array.from({ length: daysInMonth }, (_, i) => i + 1),\n    ];\n\n    setDays(daysArray);\n\n    // Установить текущий день как выбранный (по умолчанию)\n    if (!selectedDate) {\n      const today = new Date();\n      setSelectedDate({\n        year: today.getFullYear(),\n        month: today.getMonth(),\n        day: today.getDate(),\n      });\n    }\n  }, [currentDate, selectedDate]);\n\n  const handleDayClick = (day: number | null) => {\n    if (day) {\n      setSelectedDate({\n        year: currentDate.getFullYear(),\n        month: currentDate.getMonth(),\n        day,\n      });\n    }\n  };\n\n  const handleMonthChange = (offset: number) => {\n    setCurrentDate((prevDate) => {\n      const newDate = new Date(\n        prevDate.getFullYear(),\n        prevDate.getMonth() + offset,\n        1\n      );\n      return newDate;\n    });\n  };\n\n  const isSelected = (day: number | null) => {\n    if (!day || !selectedDate) return false;\n    return (\n      selectedDate.year === currentDate.getFullYear() &&\n      selectedDate.month === currentDate.getMonth() &&\n      selectedDate.day === day\n    );\n  };\n\n  return (\n    <div className=\"max-w-sm w-full\">\n      <div className=\"dark:bg-gray-800 bg-white rounded-t\">\n        <div className=\"px-4 flex items-center justify-between\">\n          <button\n            onClick={() => handleMonthChange(-1)}\n            aria-label=\"calendar backward\"\n            className=\"text-gray-800 dark:text-gray-100 p-2\"\n          >\n            &lt;\n          </button>\n          <span className=\"text-base font-bold dark:text-gray-100 text-gray-800\">\n            {`${\n              fullMonths[currentDate.getMonth()]\n            } ${currentDate.getFullYear()}`}\n          </span>\n          <button\n            onClick={() => handleMonthChange(1)}\n            aria-label=\"calendar forward\"\n            className=\"ml-3 text-gray-800 dark:text-gray-100 p-2\"\n          >\n            &gt;\n          </button>\n        </div>\n        <div className=\"flex items-center justify-between pt-2 overflow-x-auto\">\n          <table className=\"w-full\">\n            <thead>\n              <tr>\n                {weekDays.map((day) => (\n                  <th key={day}>\n                    <div className=\"w-full flex justify-center py-2\">\n                      <p className=\"text-base font-medium text-gray-800 dark:text-gray-100\">\n                        {day}\n                      </p>\n                    </div>\n                  </th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {Array.from(\n                { length: Math.ceil(days.length / 7) },\n                (_, rowIndex) => (\n                  <tr key={rowIndex}>\n                    {days\n                      .slice(rowIndex * 7, rowIndex * 7 + 7)\n                      .map((day, index) => (\n                        <td key={index} className=\"\">\n                          <div\n                            onClick={() => handleDayClick(day)}\n                            className={clsx(\n                              \"p-3 cursor-pointer flex w-full justify-center\",\n                              {\n                                \"bg-indigo-500 text-white rounded-full\":\n                                  isSelected(day),\n                                \"text-gray-500 dark:text-gray-100 font-medium\":\n                                  !isSelected(day),\n                              }\n                            )}\n                          >\n                            {day}\n                          </div>\n                        </td>\n                      ))}\n                  </tr>\n                )\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 300, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 306, "column": 0}, "map": {"version":3,"sources":["file:///Users/mitwok/my-motivation-app/src/app/components/Card.tsx"],"sourcesContent":["import React from \"react\";\n\ninterface CardProps {\n  children: React.ReactNode; // Ожидаем вложенные компоненты\n  className?: string; // Позволяет передавать дополнительные классы\n}\n\nconst Card: React.FC<CardProps> = ({ children }) => {\n  return (\n    <div className=\" border-solid border-2 border-cyan-100 transition-shadow shadow-sm shadow-cyan-500 hover:shadow-md hover:shadow-cyan-500 p-4 rounded-xl h-full\">\n      {/* <h2 className=\"text-2xl\">Title</h2>\n      <span>Description</span> */}\n      <div className=\"overflow-y-auto h-96\">{children}</div>\n    </div>\n  );\n};\n\nexport default Card;\n"],"names":[],"mappings":";;;;;AAOA,MAAM,OAA4B,CAAC,EAAE,QAAQ,EAAE;IAC7C,qBACE,6LAAC;QAAI,WAAU;kBAGb,cAAA,6LAAC;YAAI,WAAU;sBAAwB;;;;;;;;;;;AAG7C;KARM;uCAUS"}},
    {"offset": {"line": 335, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 341, "column": 0}, "map": {"version":3,"sources":["file:///Users/mitwok/my-motivation-app/src/app/components/Modal.tsx"],"sourcesContent":["\"use client\";\nimport { ReactNode } from \"react\";\n\ninterface ModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  children: ReactNode;\n}\n\nconst Modal: React.FC<ModalProps> = ({ isOpen, onClose, children }) => {\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"modal-overlay\" onClick={onClose}>\n      <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n        <button className=\"close-button\" onClick={onClose}>\n          ✖\n        </button>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n"],"names":[],"mappings":";;;;AAAA;;AASA,MAAM,QAA8B,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE;IAChE,IAAI,CAAC,QAAQ,OAAO;IAEpB,qBACE,6LAAC;QAAI,WAAU;QAAgB,SAAS;kBACtC,cAAA,6LAAC;YAAI,WAAU;YAAgB,SAAS,CAAC,IAAM,EAAE,eAAe;;8BAC9D,6LAAC;oBAAO,WAAU;oBAAe,SAAS;8BAAS;;;;;;gBAGlD;;;;;;;;;;;;AAIT;KAbM;uCAeS"}},
    {"offset": {"line": 385, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 391, "column": 0}, "map": {"version":3,"sources":["file:///Users/mitwok/my-motivation-app/src/app/components/AddTaskFrom.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { format } from \"date-fns\";\n\ninterface AddTaskFormProps {\n  onAddTask: (task: Task) => void;\n  onClose: () => void;\n}\n\ninterface Task {\n  id: string;\n  title: string;\n  frequency: string | string[];\n  startDate: string;\n  endDate: string | null;\n  requiredCompletions: number; // Необходимое количество выполнений\n}\n\nconst calculateRequiredCompletions = (\n  frequency: string | string[],\n  startDate: string,\n  endDate: string | null\n) => {\n  if (!endDate) return 0; // Бессрочная задача\n\n  const start = new Date(startDate);\n  const end = new Date(endDate);\n  const diffDays =\n    Math.ceil((end.getTime() - start.getTime()) / (1000 * 60 * 60 * 24)) + 1;\n\n  if (frequency === \"everyday\") {\n    return diffDays;\n  }\n\n  if (Array.isArray(frequency)) {\n    const fullWeeks = Math.floor(diffDays / 7);\n    const remainingDays = diffDays % 7;\n    return (\n      fullWeeks * frequency.length + frequency.slice(0, remainingDays).length\n    );\n  }\n\n  if (typeof frequency === \"string\" && frequency.startsWith(\"every\")) {\n    const interval = parseInt(frequency.split(\" \")[1]);\n    return Math.ceil(diffDays / interval);\n  }\n\n  return 0;\n};\n\nconst daysOfWeek = [\n  { label: \"Mon\", value: \"Mon\" },\n  { label: \"Tue\", value: \"Tue\" },\n  { label: \"Wed\", value: \"Wed\" },\n  { label: \"Thu\", value: \"Thu\" },\n  { label: \"Fri\", value: \"Fri\" },\n  { label: \"Sat\", value: \"Sat\" },\n  { label: \"Sun\", value: \"Sun\" },\n];\n\nconst AddTaskForm = ({ onAddTask, onClose }: AddTaskFormProps) => {\n  const [title, setTitle] = useState(\"\");\n  const [selectedDays, setSelectedDays] = useState<string[]>([]);\n  const [isEveryday, setIsEveryday] = useState(false);\n  const [customInterval, setCustomInterval] = useState(\"\");\n  const [startDate, setStartDate] = useState<string>(() =>\n    format(new Date(), \"yyyy-MM-dd\")\n  );\n  const [endDate, setEndDate] = useState(\"\");\n  const [isEndless, setIsEndless] = useState(false);\n\n  const handleDayChange = (day: string) => {\n    if (selectedDays.includes(day)) {\n      setSelectedDays(selectedDays.filter((d) => d !== day));\n    } else {\n      setSelectedDays([...selectedDays, day]);\n    }\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (\n      !title ||\n      (!isEveryday && selectedDays.length === 0 && !customInterval)\n    ) {\n      alert(\"Заполните название задачи и выберите частоту.\");\n      return;\n    }\n    const finalFrequency =\n      selectedDays.length === 7 ? \"everyday\" : selectedDays;\n\n    const frequency = isEveryday\n      ? \"everyday\"\n      : customInterval\n      ? `every ${customInterval}`\n      : selectedDays;\n\n    const calculatedCompletions = calculateRequiredCompletions(\n      frequency,\n      startDate,\n      isEndless ? null : endDate\n    );\n\n    const newTask: Task = {\n      id: uuidv4(),\n      title,\n      frequency: finalFrequency,\n      startDate,\n      endDate: isEndless ? null : endDate,\n      requiredCompletions: calculatedCompletions,\n    };\n\n    onAddTask(newTask);\n    onClose();\n  };\n\n  return (\n    <div className=\"modal\">\n      <h2>Добавить новую задачу</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>Название задачи:</label>\n          <input\n            type=\"text\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            required\n          />\n        </div>\n\n        <div>\n          <label>Дата начала:</label>\n          <input\n            type=\"date\"\n            value={startDate}\n            onChange={(e) => setStartDate(e.target.value)}\n            required\n          />\n        </div>\n\n        <div>\n          <label>Дата окончания:</label>\n          <input\n            type=\"date\"\n            value={endDate}\n            onChange={(e) => setEndDate(e.target.value)}\n            disabled={isEndless}\n          />\n          <label>\n            <input\n              type=\"checkbox\"\n              checked={isEndless}\n              onChange={() => setIsEndless(!isEndless)}\n            />\n            Без срока окончания\n          </label>\n        </div>\n\n        <div>\n          <label>Дни недели:</label>\n          <div>\n            {daysOfWeek.map((day) => (\n              <label key={day.value} style={{ marginRight: \"10px\" }}>\n                <input\n                  type=\"checkbox\"\n                  checked={selectedDays.includes(day.value)}\n                  onChange={() => {\n                    const updatedDays = selectedDays.includes(day.value)\n                      ? selectedDays.filter((d) => d !== day.value) // Убираем день\n                      : [...selectedDays, day.value]; // Добавляем день\n\n                    setSelectedDays(updatedDays);\n\n                    // Сбрасываем \"ежедневно\" и интервал\n                    setIsEveryday(false);\n                    setCustomInterval(\"\"); // Сбрасываем интервал\n                  }}\n                />\n                {day.label}\n              </label>\n            ))}\n          </div>\n        </div>\n\n        {/* Переключатель \"Ежедневно\" */}\n        <label style={{ display: \"block\", marginTop: \"10px\" }}>\n          <input\n            type=\"checkbox\"\n            checked={isEveryday}\n            onChange={() => {\n              setIsEveryday(!isEveryday);\n              if (!isEveryday) {\n                setSelectedDays(daysOfWeek.map((day) => day.value)); // Отметить все дни\n                setCustomInterval(\"\");\n              } else {\n                setSelectedDays([]); // Сбросить выбор\n              }\n            }}\n          />\n          Ежедневно\n        </label>\n\n        {/* Поле для выбора интервала */}\n        <div>\n          <label>Интервал (каждые X дней):</label>\n          <input\n            type=\"number\"\n            min=\"1\"\n            value={customInterval}\n            onChange={(e) => {\n              setCustomInterval(e.target.value);\n              setSelectedDays([]); // Сбрасываем выбор дней\n              setIsEveryday(false); // Сбрасываем \"ежедневно\"\n            }}\n          />\n        </div>\n\n        <div style={{ marginTop: \"20px\" }}>\n          <button type=\"submit\">Добавить задачу</button>\n          <button\n            type=\"button\"\n            onClick={onClose}\n            style={{ marginLeft: \"10px\" }}\n          >\n            Отмена\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default AddTaskForm;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 763, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 769, "column": 0}, "map": {"version":3,"sources":["file:///Users/mitwok/my-motivation-app/src/app/components/AddTaskModal.tsx"],"sourcesContent":["\"use client\";\nimport { useState } from \"react\";\nimport Modal from \"./Modal\";\nimport AddTaskForm from \"./AddTaskFrom\";\n\ninterface AddTaskModalProps {\n  onAddTask: (task: any) => void;\n}\n\nconst AddTaskModal: React.FC<AddTaskModalProps> = ({ onAddTask }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => setIsModalOpen(true);\n  const closeModal = () => setIsModalOpen(false);\n\n  return (\n    <div>\n      <button onClick={openModal}>Add New Task</button>\n\n      <Modal isOpen={isModalOpen} onClose={closeModal}>\n        <AddTaskForm onAddTask={onAddTask} onClose={closeModal} />\n      </Modal>\n    </div>\n  );\n};\n\nexport default AddTaskModal;\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;;;AAHA;;;;AASA,MAAM,eAA4C,CAAC,EAAE,SAAS,EAAE;;IAC9D,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE/C,MAAM,YAAY,IAAM,eAAe;IACvC,MAAM,aAAa,IAAM,eAAe;IAExC,qBACE,6LAAC;;0BACC,6LAAC;gBAAO,SAAS;0BAAW;;;;;;0BAE5B,6LAAC,qIAAA,CAAA,UAAK;gBAAC,QAAQ;gBAAa,SAAS;0BACnC,cAAA,6LAAC,2IAAA,CAAA,UAAW;oBAAC,WAAW;oBAAW,SAAS;;;;;;;;;;;;;;;;;AAIpD;GAfM;KAAA;uCAiBS"}},
    {"offset": {"line": 828, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 834, "column": 0}, "map": {"version":3,"sources":["file:///Users/mitwok/my-motivation-app/src/app/components/DailyTasks.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport { useCalendar } from \"./contexts/CalendarContext\";\nimport AddTaskModal from \"./AddTaskModal\";\n\ninterface Task {\n  id: string;\n  title: string;\n  frequency: string | string[];\n  startDate: string;\n  endDate: string | null;\n  requiredCompletions: number; // Необходимое количество выполнений\n}\n\ninterface CompletedTasks {\n  [date: string]: string[]; // дата: массив id выполненных задач\n}\n\nexport default function DailyTasks() {\n  const { selectedDate } = useCalendar();\n  const [tasks, setTasks] = useState<Task[]>([]);\n  const [completedTasks, setCompletedTasks] = useState<CompletedTasks>({});\n\n  // Добавление новой задачи\n  const handleAddTask = (task: Task) => {\n    setTasks((prevTasks) => [...prevTasks, task]);\n  };\n\n  // Загрузка задач и выполнений из Local Storage\n  useEffect(() => {\n    const storedTasks = localStorage.getItem(\"tasks\");\n    const storedCompletedTasks = localStorage.getItem(\"completedTasks\");\n\n    if (storedTasks) setTasks(JSON.parse(storedTasks));\n    if (storedCompletedTasks)\n      setCompletedTasks(JSON.parse(storedCompletedTasks));\n    window.dispatchEvent(new Event(\"completedTasksUpdated\"));\n  }, []);\n\n  // Сохранение данных в Local Storage\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    localStorage.setItem(\"completedTasks\", JSON.stringify(completedTasks));\n  }, [tasks, completedTasks]);\n\n  // Форматирование даты\n  const formatDate = (year: number, month: number, day: number) =>\n    `${year}-${String(month + 1).padStart(2, \"0\")}-${String(day).padStart(\n      2,\n      \"0\"\n    )}`;\n\n  // Фильтрация задач по дате\n  const getTasksForSelectedDate = () => {\n    if (!selectedDate) return [];\n\n    const currentDate = formatDate(\n      selectedDate.year,\n      selectedDate.month,\n      selectedDate.day\n    );\n\n    return tasks.filter((task) => {\n      const taskStartDate = new Date(task.startDate);\n      const taskEndDate = task.endDate ? new Date(task.endDate) : null;\n      const today = new Date(currentDate);\n\n      if (today < taskStartDate) return false;\n      if (taskEndDate && today > taskEndDate) return false;\n\n      if (task.frequency === \"everyday\") return true;\n\n      if (Array.isArray(task.frequency)) {\n        const dayOfWeek = today.toLocaleDateString(\"en-US\", {\n          weekday: \"short\",\n        });\n        return task.frequency.includes(dayOfWeek);\n      }\n\n      if (\n        typeof task.frequency === \"string\" &&\n        task.frequency.startsWith(\"every\")\n      ) {\n        const interval = parseInt(task.frequency.split(\" \")[1]);\n        const diffInDays = Math.floor(\n          (today.getTime() - taskStartDate.getTime()) / (1000 * 60 * 60 * 24)\n        );\n        return diffInDays % interval === 0;\n      }\n\n      return false;\n    });\n  };\n\n  // ✅ Вычисление прогресса задачи на основе выполнений\n  const calculateTaskProgress = (\n    taskId: string,\n    requiredCompletions: number\n  ) => {\n    const allCompletions = Object.values(completedTasks)\n      .flat()\n      .filter((id) => id === taskId).length;\n\n    const progress = (allCompletions / requiredCompletions) * 100;\n    return Math.min(Math.round(progress), 100);\n  };\n\n  // Проверка выполнения задачи на сегодня\n  const isTaskCompletedToday = (taskId: string) => {\n    if (!selectedDate) return false;\n\n    const currentDate = formatDate(\n      selectedDate.year,\n      selectedDate.month,\n      selectedDate.day\n    );\n    return completedTasks[currentDate]?.includes(taskId) ?? false;\n  };\n\n  // Отметка задачи как выполненной\n  const handleToggleTaskCompletion = (taskId: string) => {\n    if (!selectedDate) return;\n\n    const currentDate = formatDate(\n      selectedDate.year,\n      selectedDate.month,\n      selectedDate.day\n    );\n    const isCompleted = isTaskCompletedToday(taskId);\n\n    setCompletedTasks((prev) => {\n      const updatedTasks = { ...prev };\n      if (isCompleted) {\n        updatedTasks[currentDate] = updatedTasks[currentDate].filter(\n          (id) => id !== taskId\n        );\n        window.dispatchEvent(new Event(\"completedTasksUpdated\"));\n      } else {\n        updatedTasks[currentDate] = [\n          ...(updatedTasks[currentDate] || []),\n          taskId,\n        ];\n        window.dispatchEvent(new Event(\"completedTasksUpdated\"));\n      }\n      return updatedTasks;\n    });\n  };\n\n  \n\n  // Расчет общего прогресса на день\n  const calculateDailyProgress = () => {\n    if (!selectedDate) return 0; // Проверка на null\n\n    const tasksForToday = getTasksForSelectedDate();\n    if (tasksForToday.length === 0) return 0;\n\n    const totalTasks = tasksForToday.length; // Общее количество задач на сегодня\n    const completedTasksCount = tasksForToday.reduce((completedCount, task) => {\n      const currentDate = formatDate(\n        selectedDate.year,\n        selectedDate.month,\n        selectedDate.day\n      );\n\n      const isCompleted =\n        completedTasks[currentDate]?.includes(task.id) || false;\n      return completedCount + (isCompleted ? 1 : 0);\n    }, 0);\n\n    return Math.round((completedTasksCount / totalTasks) * 100);\n  };\n  const dailyProgress = calculateDailyProgress();\n  const tasksForToday = getTasksForSelectedDate();\n\n  \n\n  return (\n    <div>\n      <h2>Tasks for the Day</h2>\n      <AddTaskModal onAddTask={handleAddTask} />\n\n      {selectedDate ? (\n        <p>\n          Selected Date: {selectedDate.month + 1}/{selectedDate.day}/\n          {selectedDate.year}\n        </p>\n      ) : (\n        <p>No date selected</p>\n      )}\n      {/* Общий прогресс за день */}\n      <div className=\"mb-2\">\n        <strong>Daily Progress: {dailyProgress}%</strong>\n        <div style={{ width: \"100%\", height: \"10px\", backgroundColor: \"#ddd\" }}>\n          <div\n            style={{\n              width: `${dailyProgress}%`,\n              height: \"100%\",\n              backgroundColor: dailyProgress === 100 ? \"green\" : \"orange\",\n            }}\n          ></div>\n        </div>\n      </div>\n\n      {tasksForToday.length > 0 ? (\n        <ul>\n          {tasksForToday.map((task) => {\n            const progress = calculateTaskProgress(\n              task.id,\n              task.requiredCompletions\n            );\n\n            return (\n              <li key={task.id}>\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={isTaskCompletedToday(task.id)}\n                    onChange={() => handleToggleTaskCompletion(task.id)}\n                  />\n                  {task.title} — {progress}% выполнено\n                </label>\n                <div\n                  style={{\n                    width: \"100%\",\n                    height: \"10px\",\n                    backgroundColor: \"#ddd\",\n                    marginTop: \"5px\",\n                  }}\n                >\n                  <div\n                    style={{\n                      width: `${progress}%`,\n                      height: \"100%\",\n                      backgroundColor: progress === 100 ? \"green\" : \"orange\",\n                    }}\n                  ></div>\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>No tasks for this day.</p>\n      )}\n    </div>\n  );\n\n  \n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1118, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1124, "column": 0}, "map": {"version":3,"sources":["file:///Users/mitwok/my-motivation-app/src/app/components/OverallProgress.tsx"],"sourcesContent":["\"use client\";\nimport React, { useEffect, useState } from \"react\";\n\ninterface CompletedTasks {\n  [date: string]: string[];\n}\n\nconst OverallProgress: React.FC = () => {\n  const [completedTasks, setCompletedTasks] = useState<CompletedTasks>({});\n\n  // Функция для загрузки выполненных задач из localStorage\n  const loadCompletedTasks = () => {\n    const storedCompletedTasks = localStorage.getItem(\"completedTasks\");\n    setCompletedTasks(storedCompletedTasks ? JSON.parse(storedCompletedTasks) : {});\n  };\n\n  useEffect(() => {\n    // Первоначальная загрузка\n    loadCompletedTasks();\n\n    // Слушаем событие обновления `localStorage` внутри вкладки\n    const handleUpdate = () => {\n      loadCompletedTasks();\n    };\n\n    window.addEventListener(\"completedTasksUpdated\", handleUpdate);\n    return () => window.removeEventListener(\"completedTasksUpdated\", handleUpdate);\n  }, []);\n\n  // Пример расчёта общего прогресса\n  const calculateOverallProgress = () => {\n    const allTaskIds = Object.values(completedTasks).flat();\n    return allTaskIds.length;\n  };\n\n  return (\n    <div>\n      <h2>Overall Progress</h2>\n      <p>Completed Tasks: {calculateOverallProgress()}</p>\n    </div>\n  );\n};\n\nexport default OverallProgress;"],"names":[],"mappings":";;;;AACA;;;AADA;;AAOA,MAAM,kBAA4B;;IAChC,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAkB,CAAC;IAEtE,yDAAyD;IACzD,MAAM,qBAAqB;QACzB,MAAM,uBAAuB,aAAa,OAAO,CAAC;QAClD,kBAAkB,uBAAuB,KAAK,KAAK,CAAC,wBAAwB,CAAC;IAC/E;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;qCAAE;YACR,0BAA0B;YAC1B;YAEA,2DAA2D;YAC3D,MAAM;0DAAe;oBACnB;gBACF;;YAEA,OAAO,gBAAgB,CAAC,yBAAyB;YACjD;6CAAO,IAAM,OAAO,mBAAmB,CAAC,yBAAyB;;QACnE;oCAAG,EAAE;IAEL,kCAAkC;IAClC,MAAM,2BAA2B;QAC/B,MAAM,aAAa,OAAO,MAAM,CAAC,gBAAgB,IAAI;QACrD,OAAO,WAAW,MAAM;IAC1B;IAEA,qBACE,6LAAC;;0BACC,6LAAC;0BAAG;;;;;;0BACJ,6LAAC;;oBAAE;oBAAkB;;;;;;;;;;;;;AAG3B;GAlCM;KAAA;uCAoCS"}},
    {"offset": {"line": 1196, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1202, "column": 0}, "map": {"version":3,"sources":["file:///Users/mitwok/my-motivation-app/src/app/components/MainSection.tsx"],"sourcesContent":["\"use client\";\nimport Calendar from \"./Calendar\";\nimport Card from \"./Card\";\nimport DailyTasks from \"./DailyTasks\";\nimport OverallProgress from \"./OverallProgress\";\n\nexport default function Main() {\n  return (\n    <main className=\"\">\n      <div className=\"mx-auto max-w-2xl px-6 lg:py-8 lg:max-w-7xl lg:px-8\">\n        <div className=\"grid gap-4 lg:grid-cols-3\">\n          <Card>\n            <Calendar />\n          </Card>\n          <Card>\n            <DailyTasks />\n          </Card>\n          <Card>\n            <OverallProgress />\n          </Card>\n        </div>\n      </div>\n    </main>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AAJA;;;;;;AAMe,SAAS;IACtB,qBACE,6LAAC;QAAK,WAAU;kBACd,cAAA,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,oIAAA,CAAA,UAAI;kCACH,cAAA,6LAAC,wIAAA,CAAA,UAAQ;;;;;;;;;;kCAEX,6LAAC,oIAAA,CAAA,UAAI;kCACH,cAAA,6LAAC,0IAAA,CAAA,UAAU;;;;;;;;;;kCAEb,6LAAC,oIAAA,CAAA,UAAI;kCACH,cAAA,6LAAC,+IAAA,CAAA,UAAe;;;;;;;;;;;;;;;;;;;;;;;;;;AAM5B;KAlBwB"}},
    {"offset": {"line": 1280, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}